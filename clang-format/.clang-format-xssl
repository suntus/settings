# require clang-format 10.0.0
---
# =====基础=======
BasedOnStyle: Google
Language: Cpp
ColumnLimit: 100

# =====缩进=======
UseTab: Never
IndentWidth: 4
TabWidth: 4
ContinuationIndentWidth: 4
# 是否缩进define，以及#这个符号是在行开头还是跟着缩进
IndentPPDirectives: BeforeHash
# 不缩进 case 标签
IndentCaseLabels: false

# =====对齐相关=======
# 尽量靠左对齐所有的\，而不是把\统一放到最右
AlignEscapedNewlines: Left
# 按照第一个操作符对齐，而不是用换行缩进对齐
AlignOperands: true
# 对齐尾部注释
AlignTrailingComments: true
AlignAfterOpenBracket: Align
# 挨着的多行define尽量对齐
AlignConsecutiveMacros: true

# =====单行情况=======
AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false

# =====换行=======
# 函数返回类型不换行
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
# 不要在多行字符串最前边换行，特别是printf第一个参数比较长的话，可以防止都另起一行
AlwaysBreakBeforeMultilineStrings: false
# 多行参数的话，尽量一行里边多放，而不是每一行放一个
BinPackArguments: true
BinPackParameters: true
# 换行的时候，把符号放到后续每一行的前边，
# 类似:
# a = b + c
#     + d
#     + e
# 而不是:
# a = b + c +
#     d +
#     e
BreakBeforeBinaryOperators: NonAssignment
# 大括号位置
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: false
  AfterControlStatement: false
  AfterEnum: false
  AfterFunction: true
  AfterNamespace: false
  AfterObjCDeclaration: false
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: false
  BeforeCatch: false
  BeforeElse: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true
# 三元操作符符号放前边
BreakBeforeTernaryOperators: true
BreakStringLiterals: true

# =====换行微调=======
# clang-format格式化一个很长的行的时候，会计算出每个可能位置的penalty值，会在penalty
# 最小的地方换行，所以下边这些就是调整这个数值的，数值越大，penalty值越大，
# 越不会在这里换行。也是相对来说
# 尽量不在赋值号前换行
PenaltyBreakAssignment: 10
# 尽量不在第一个调用参数前换行
PenaltyBreakBeforeFirstCallParameter: 30
PenaltyBreakComment: 10
PenaltyBreakFirstLessLess: 0
PenaltyBreakString: 10
PenaltyExcessCharacter: 5
# 不能忍受返回值单独一行
PenaltyReturnTypeOnItsOwnLine: 1000
# 会折叠注释
ReflowComments: true


# =====空格=======
# 强制类型转换中间不加空格 (int *)a， 而不是(int *) a
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeParens: true
Standard: Cpp03


# =====杂项=======
# 不重新排序头文件
SortIncludes: false
# 最大空1行
MaxEmptyLinesToKeep: 1
# {}内部两侧没有空格
Cpp11BracedListStyle: true

# 不继承*的靠近方式
DerivePointerAlignment: false
# 指针类型*总是靠近name，而不是type
PointerAlignment: Right

# 将foreach看做loop，而不是函数调用
# 从下边两个命令中取到的
# git grep -h '^#define [^[:space:]]*foreach[^[:space:]]*(' src/  \
# | sed "s,^#define \([^[:space:]]*foreach[^[:space:]]*\)(.*$,  - \1,"  \
# | sort | uniq
# git grep -h '^#define [^[:space:]]*for_each[^[:space:]]*(' src/  \
# | sed "s,^#define \([^[:space:]]*for_each[^[:space:]]*\)(.*$,  - \1,"  \
# | sort | uniq
ForEachMacros:
  - cipher_suite_map_foreach
  - xssl_groups_foreach
  - xssl_sign_scheme_foreach
  - xssl_supported_groups_foreach
  - xssl_supported_sign_scheme_foreach
  - cert_list_for_each
  - cert_list_for_each_safe
  - for_each_cert_store
  - xssl_buf_queue_for_each
  - xssl_buf_queue_for_each_from
  - xssl_buf_queue_for_each_reverse
  - xssl_buf_queue_for_each_safe
  - xssl_buf_queue_for_each_safe_continue
  - xssl_buf_queue_for_each_safe_from
  - xssl_buf_queue_for_each_safe_reverse
  - xssl_extensions_for_each
  - xssl_suite_table_for_each
  - xssl_suite_table_for_each_safe

---

